/*
Gridly API

Gridly API documentation

API version: 3.23.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gridly

import (
	"encoding/json"
)

// CreateGrid struct for CreateGrid
type CreateGrid struct {
	Metadata *map[string]string `json:"metadata,omitempty"`
	Name *string `json:"name,omitempty"`
	TemplateGridId *string `json:"templateGridId,omitempty"`
}

// NewCreateGrid instantiates a new CreateGrid object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateGrid() *CreateGrid {
	this := CreateGrid{}
	return &this
}

// NewCreateGridWithDefaults instantiates a new CreateGrid object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateGridWithDefaults() *CreateGrid {
	this := CreateGrid{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *CreateGrid) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGrid) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CreateGrid) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *CreateGrid) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateGrid) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGrid) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateGrid) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateGrid) SetName(v string) {
	o.Name = &v
}

// GetTemplateGridId returns the TemplateGridId field value if set, zero value otherwise.
func (o *CreateGrid) GetTemplateGridId() string {
	if o == nil || o.TemplateGridId == nil {
		var ret string
		return ret
	}
	return *o.TemplateGridId
}

// GetTemplateGridIdOk returns a tuple with the TemplateGridId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGrid) GetTemplateGridIdOk() (*string, bool) {
	if o == nil || o.TemplateGridId == nil {
		return nil, false
	}
	return o.TemplateGridId, true
}

// HasTemplateGridId returns a boolean if a field has been set.
func (o *CreateGrid) HasTemplateGridId() bool {
	if o != nil && o.TemplateGridId != nil {
		return true
	}

	return false
}

// SetTemplateGridId gets a reference to the given string and assigns it to the TemplateGridId field.
func (o *CreateGrid) SetTemplateGridId(v string) {
	o.TemplateGridId = &v
}

func (o CreateGrid) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.TemplateGridId != nil {
		toSerialize["templateGridId"] = o.TemplateGridId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateGrid struct {
	value *CreateGrid
	isSet bool
}

func (v NullableCreateGrid) Get() *CreateGrid {
	return v.value
}

func (v *NullableCreateGrid) Set(val *CreateGrid) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateGrid) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateGrid) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateGrid(val *CreateGrid) *NullableCreateGrid {
	return &NullableCreateGrid{value: val, isSet: true}
}

func (v NullableCreateGrid) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateGrid) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


