/*
Gridly API

Gridly API documentation

API version: 3.20.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gridly

import (
	"encoding/json"
)

// PublicDependency struct for PublicDependency
type PublicDependency struct {
	Id *string `json:"id,omitempty"`
	SourceColumnId *string `json:"sourceColumnId,omitempty"`
	TargetColumnId *string `json:"targetColumnId,omitempty"`
}

// NewPublicDependency instantiates a new PublicDependency object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicDependency() *PublicDependency {
	this := PublicDependency{}
	return &this
}

// NewPublicDependencyWithDefaults instantiates a new PublicDependency object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicDependencyWithDefaults() *PublicDependency {
	this := PublicDependency{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PublicDependency) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicDependency) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PublicDependency) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PublicDependency) SetId(v string) {
	o.Id = &v
}

// GetSourceColumnId returns the SourceColumnId field value if set, zero value otherwise.
func (o *PublicDependency) GetSourceColumnId() string {
	if o == nil || o.SourceColumnId == nil {
		var ret string
		return ret
	}
	return *o.SourceColumnId
}

// GetSourceColumnIdOk returns a tuple with the SourceColumnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicDependency) GetSourceColumnIdOk() (*string, bool) {
	if o == nil || o.SourceColumnId == nil {
		return nil, false
	}
	return o.SourceColumnId, true
}

// HasSourceColumnId returns a boolean if a field has been set.
func (o *PublicDependency) HasSourceColumnId() bool {
	if o != nil && o.SourceColumnId != nil {
		return true
	}

	return false
}

// SetSourceColumnId gets a reference to the given string and assigns it to the SourceColumnId field.
func (o *PublicDependency) SetSourceColumnId(v string) {
	o.SourceColumnId = &v
}

// GetTargetColumnId returns the TargetColumnId field value if set, zero value otherwise.
func (o *PublicDependency) GetTargetColumnId() string {
	if o == nil || o.TargetColumnId == nil {
		var ret string
		return ret
	}
	return *o.TargetColumnId
}

// GetTargetColumnIdOk returns a tuple with the TargetColumnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicDependency) GetTargetColumnIdOk() (*string, bool) {
	if o == nil || o.TargetColumnId == nil {
		return nil, false
	}
	return o.TargetColumnId, true
}

// HasTargetColumnId returns a boolean if a field has been set.
func (o *PublicDependency) HasTargetColumnId() bool {
	if o != nil && o.TargetColumnId != nil {
		return true
	}

	return false
}

// SetTargetColumnId gets a reference to the given string and assigns it to the TargetColumnId field.
func (o *PublicDependency) SetTargetColumnId(v string) {
	o.TargetColumnId = &v
}

func (o PublicDependency) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.SourceColumnId != nil {
		toSerialize["sourceColumnId"] = o.SourceColumnId
	}
	if o.TargetColumnId != nil {
		toSerialize["targetColumnId"] = o.TargetColumnId
	}
	return json.Marshal(toSerialize)
}

type NullablePublicDependency struct {
	value *PublicDependency
	isSet bool
}

func (v NullablePublicDependency) Get() *PublicDependency {
	return v.value
}

func (v *NullablePublicDependency) Set(val *PublicDependency) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicDependency) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicDependency) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicDependency(val *PublicDependency) *NullablePublicDependency {
	return &NullablePublicDependency{value: val, isSet: true}
}

func (v NullablePublicDependency) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicDependency) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


