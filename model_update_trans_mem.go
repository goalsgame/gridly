/*
Gridly API

Gridly API documentation

API version: 4.15.1
Contact: support@gridly.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gridly

import (
	"encoding/json"
)

// UpdateTransMem struct for UpdateTransMem
type UpdateTransMem struct {
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	ProjectIds []int64 `json:"projectIds,omitempty"`
	FuzzyMatch *bool `json:"fuzzyMatch,omitempty"`
	IsDisabled *bool `json:"isDisabled,omitempty"`
	IsPausedConsuming *bool `json:"isPausedConsuming,omitempty"`
	PopulateTranslationStatus *TranslationStatus `json:"populateTranslationStatus,omitempty"`
}

// NewUpdateTransMem instantiates a new UpdateTransMem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTransMem() *UpdateTransMem {
	this := UpdateTransMem{}
	return &this
}

// NewUpdateTransMemWithDefaults instantiates a new UpdateTransMem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTransMemWithDefaults() *UpdateTransMem {
	this := UpdateTransMem{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateTransMem) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTransMem) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateTransMem) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateTransMem) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateTransMem) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTransMem) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateTransMem) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateTransMem) SetDescription(v string) {
	o.Description = &v
}

// GetProjectIds returns the ProjectIds field value if set, zero value otherwise.
func (o *UpdateTransMem) GetProjectIds() []int64 {
	if o == nil || o.ProjectIds == nil {
		var ret []int64
		return ret
	}
	return o.ProjectIds
}

// GetProjectIdsOk returns a tuple with the ProjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTransMem) GetProjectIdsOk() ([]int64, bool) {
	if o == nil || o.ProjectIds == nil {
		return nil, false
	}
	return o.ProjectIds, true
}

// HasProjectIds returns a boolean if a field has been set.
func (o *UpdateTransMem) HasProjectIds() bool {
	if o != nil && o.ProjectIds != nil {
		return true
	}

	return false
}

// SetProjectIds gets a reference to the given []int64 and assigns it to the ProjectIds field.
func (o *UpdateTransMem) SetProjectIds(v []int64) {
	o.ProjectIds = v
}

// GetFuzzyMatch returns the FuzzyMatch field value if set, zero value otherwise.
func (o *UpdateTransMem) GetFuzzyMatch() bool {
	if o == nil || o.FuzzyMatch == nil {
		var ret bool
		return ret
	}
	return *o.FuzzyMatch
}

// GetFuzzyMatchOk returns a tuple with the FuzzyMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTransMem) GetFuzzyMatchOk() (*bool, bool) {
	if o == nil || o.FuzzyMatch == nil {
		return nil, false
	}
	return o.FuzzyMatch, true
}

// HasFuzzyMatch returns a boolean if a field has been set.
func (o *UpdateTransMem) HasFuzzyMatch() bool {
	if o != nil && o.FuzzyMatch != nil {
		return true
	}

	return false
}

// SetFuzzyMatch gets a reference to the given bool and assigns it to the FuzzyMatch field.
func (o *UpdateTransMem) SetFuzzyMatch(v bool) {
	o.FuzzyMatch = &v
}

// GetIsDisabled returns the IsDisabled field value if set, zero value otherwise.
func (o *UpdateTransMem) GetIsDisabled() bool {
	if o == nil || o.IsDisabled == nil {
		var ret bool
		return ret
	}
	return *o.IsDisabled
}

// GetIsDisabledOk returns a tuple with the IsDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTransMem) GetIsDisabledOk() (*bool, bool) {
	if o == nil || o.IsDisabled == nil {
		return nil, false
	}
	return o.IsDisabled, true
}

// HasIsDisabled returns a boolean if a field has been set.
func (o *UpdateTransMem) HasIsDisabled() bool {
	if o != nil && o.IsDisabled != nil {
		return true
	}

	return false
}

// SetIsDisabled gets a reference to the given bool and assigns it to the IsDisabled field.
func (o *UpdateTransMem) SetIsDisabled(v bool) {
	o.IsDisabled = &v
}

// GetIsPausedConsuming returns the IsPausedConsuming field value if set, zero value otherwise.
func (o *UpdateTransMem) GetIsPausedConsuming() bool {
	if o == nil || o.IsPausedConsuming == nil {
		var ret bool
		return ret
	}
	return *o.IsPausedConsuming
}

// GetIsPausedConsumingOk returns a tuple with the IsPausedConsuming field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTransMem) GetIsPausedConsumingOk() (*bool, bool) {
	if o == nil || o.IsPausedConsuming == nil {
		return nil, false
	}
	return o.IsPausedConsuming, true
}

// HasIsPausedConsuming returns a boolean if a field has been set.
func (o *UpdateTransMem) HasIsPausedConsuming() bool {
	if o != nil && o.IsPausedConsuming != nil {
		return true
	}

	return false
}

// SetIsPausedConsuming gets a reference to the given bool and assigns it to the IsPausedConsuming field.
func (o *UpdateTransMem) SetIsPausedConsuming(v bool) {
	o.IsPausedConsuming = &v
}

// GetPopulateTranslationStatus returns the PopulateTranslationStatus field value if set, zero value otherwise.
func (o *UpdateTransMem) GetPopulateTranslationStatus() TranslationStatus {
	if o == nil || o.PopulateTranslationStatus == nil {
		var ret TranslationStatus
		return ret
	}
	return *o.PopulateTranslationStatus
}

// GetPopulateTranslationStatusOk returns a tuple with the PopulateTranslationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTransMem) GetPopulateTranslationStatusOk() (*TranslationStatus, bool) {
	if o == nil || o.PopulateTranslationStatus == nil {
		return nil, false
	}
	return o.PopulateTranslationStatus, true
}

// HasPopulateTranslationStatus returns a boolean if a field has been set.
func (o *UpdateTransMem) HasPopulateTranslationStatus() bool {
	if o != nil && o.PopulateTranslationStatus != nil {
		return true
	}

	return false
}

// SetPopulateTranslationStatus gets a reference to the given TranslationStatus and assigns it to the PopulateTranslationStatus field.
func (o *UpdateTransMem) SetPopulateTranslationStatus(v TranslationStatus) {
	o.PopulateTranslationStatus = &v
}

func (o UpdateTransMem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ProjectIds != nil {
		toSerialize["projectIds"] = o.ProjectIds
	}
	if o.FuzzyMatch != nil {
		toSerialize["fuzzyMatch"] = o.FuzzyMatch
	}
	if o.IsDisabled != nil {
		toSerialize["isDisabled"] = o.IsDisabled
	}
	if o.IsPausedConsuming != nil {
		toSerialize["isPausedConsuming"] = o.IsPausedConsuming
	}
	if o.PopulateTranslationStatus != nil {
		toSerialize["populateTranslationStatus"] = o.PopulateTranslationStatus
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateTransMem struct {
	value *UpdateTransMem
	isSet bool
}

func (v NullableUpdateTransMem) Get() *UpdateTransMem {
	return v.value
}

func (v *NullableUpdateTransMem) Set(val *UpdateTransMem) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTransMem) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTransMem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTransMem(val *UpdateTransMem) *NullableUpdateTransMem {
	return &NullableUpdateTransMem{value: val, isSet: true}
}

func (v NullableUpdateTransMem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTransMem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


